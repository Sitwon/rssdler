A list of "postDownloadFunctions" for [http://code.google.com/p/rssdler/ RSSDler]. Feel free to edit this page, but please keep the list with the same formatting (link to function as function name - description - version tested with). 

=== ifTorrent ===
{{{ 
def ifTorrent(directory, filename, rssItemNode, retrievedLink, downloadDict, threadName):
	"""detects if file downloaded was a torrent, if not, 
removes it from saved queue and puts it to failed queue, and removes from RSS - 0.3.2"""
	global saved
	try: fd = open(os.path.join(directory, filename), 'rb')
	except IOError, m:
		logStatusMsg( unicode(m) + u" could not even open our just written file. leaving function..", 2)
		return None
	try: fdT = bdecode( fd.read() )
	except ValueError: fdT = False
	if fdT: 
		# maybe you want to store downloaded data in a tmp directory so you can vet it here and then pass it on to wherever
		# os.rename( os.path.join(directory, filename), os.path.join('/my/other/directory', filename) )
		# if we successfully bdecoded the data, means that it is a torrent and we can exit, otherwise
		pass
		return True
	# the url for this download should be the last one added to saved. could try checking against rssItemNode['link'] to be sure
	else:
		logStatusMsg(u"The file %s wasn't actually torrent data. Attempting to remove from queue. Will add to failedDown" % filename , 1)
		try: os.unlink( os.path.join(directory, filename) )
		except OSError: logStatusMsg(u"could not remove file from disk: %s" % filename, 1 )	
		saved.failedDown.append( FailedItem( saved.downloads.pop(), threadName, rssItemNode, downloadDict) )
		# if using rss, remove the rss entry for the items
		global rss
		if rss: rss.delItem()
		return False
}}}

=== currentOnly ===
{{{
def currentOnly(directory, filename, rssItemNode, retrievedLink, downloadDict, threadName):
	"""removes the download if it is not sufficiently current 
(useful for feeds that somehow decide to redo all the links and items 
such that they all appear as new) - 0.3.2"""
	if time.time() - time.mktime( rssItemNode['updated_parsed'] ) > 86400:
		try: os.unlink( os.path.join(directory, filename) )
		except OSError: logStatusMsg(u"could not remove file from disk: %s" % filename, 1 )	
		global rss
		if rss: rss.delItem()
}}}

=== noRSS ===
{{{
def noRss(directory, filename, rssItemNode, retrievedLink, downloadDict, threadName):
	"""removes item from rss feed. in case you want rss for some feeds, but not all - 0.3.2"""
	global rss
	if rss: rss.delItem()
}}}

=== rmObj ===

{{{

def rmObj(directory, filename, rssItemNode, retrievedLink, downloadDict, threadName):
	"""removes the .obj extension for the octet-stream bug: http://code.google.com/p/rssdler/issues/detail?id=2"""
	if filename.endswith('.obj'):
		newfilename = filename[:-4]
		try: os.rename( os.path.join(directory, filename), os.path.join(directory, newfilename) )
		except Exception, m: logStatusMsg(u"could not remove .obj from filename %s" % filename, 2)
}}}
